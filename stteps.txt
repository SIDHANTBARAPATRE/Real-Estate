Note : Console Characteristics ->

1)Application a) Local Storage->http://loalhost:5173- delete persist:root to delete the current user and refresh the page.
                         b)Cookies->http://localhost:5173- delete the access token to clear the cookies.

2)Network -> Whenever you logged in you can see the credentials in response section by clicking to the id present on left.

ex - update the user -> go to network-> click on id->responses-> see the email, username, password.

1)Installation of vite+ react

npm create vite@latest client

2)select react, then select javascript+sws

3)Installation of tailwing - look through the documentation.

4)initializing terminal and pushing all the codes in the GitHub.
   
commands-

  a) git init
  
  b) git add .

  c) git commit -m "install react js and tailwind css and create the first template"

  Create a repository in GitHub without  readme file in  browser and paste the foolowing codes in terminal-

  d) git remote add origin https://github.com/SIDHANTBARAPATRE/Real-Estate.git

  e) git branch -M main

  f) git push -u origin main

 5)Creating Pages and routes

6) Create Header Components

7)Creating server

Note git must be initialize in the parent folder where api(server) and client both is present.

move .gitignore file from client to parent folder where both apia nd client is present


8)Connecting to MongoDB

username - Sidhant
password - Sidhant

mongodb connection string contains password ....so secure it using .env file by storing string there....ad add .env to .gitignore file...so that the while deployed string will be hidden with password.

9)creating user model

10)Creating aoi routes - make sure to store it like a tree
   
     index.js
        |
     user.routes.js(inside routes)
        |
     user.controller.js(inside controller)

url - http://localhost:3000/api/user/test

11)Creating a middleware to handle error in more arranged form
    
    app.use((err, req, res, next) => {
    const statusCode = err.statusCode || 500;
    const message = err.message 

     'Internal Server Error';
     return  res.status(statusCode).json({
        success : false,
        statusCode,
        message,
     });
});


12)Creting a own error function to handle future error(will be used later)

13)Creating UI of Signup
14)Google auth (OAuth)

create new project in firebase:
go to console of firebase ->new project->get started-> web -> select google-> install firebase-> copy the code with key.


    check->application->local storage --- for current logged in user
    delete the user for again re login
14)complted profile UI

-> copied code.
->see how to create storage in firebase.

15) create Update Api Route
  
     -> create verifyToken to verify the user (note install cookie-parser in Real-Estate not in api folder)

   -> set -> if we want to update the only one information such as only then the set function is used.

16)Complete Delete user Functionality
17)Created sign out functionality
18)Add  create Listing api route 
19)complete create listing page UI
20)complete upload listing images functionality
->mistake in a commit...
21)complete create listing page functionality
 -> We use useRef to identify the particular user creating this listing..
22)create get user API route.
req.user.id === req.params.id  -------  user.id - from cookies and params.id from url
23) complete show user listing functionality
24)complete delete user functionality
25)create update listing api route
  -> listing id must be passed not the user id.
26)complete update listing functionality.
->use of params ---- we need to import since it is frontend , therefore req.params does not work
27)Add image slider to the listing page.
28)Add contact landlord functionality.
29) create search api route
30)complete header search form functionality
31)create search page UI
32)add onChange and onSubmit functionality to the search page
33)Create the listing item component and show listings
     ->adding line clamp from tailwind css  GitHub repository- used to see the description in required number of line by users choice. 
33)add show more listings functionality and complet home page 
34)Compete About Page.
35)Deployment to render pending




